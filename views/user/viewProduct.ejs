<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Product Details</title>
    <link rel="stylesheet" href="/tailwindcss/output.css" />
    <link
      rel="stylesheet"
      href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.6.0/css/all.min.css"
    />
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

    <style>
      #imageZoom {
        width: 100%;
        position: relative;
        cursor: zoom-in;
      }
      #imageZoom img {
        width: 100%;
        height: auto;
        object-fit: cover;
      }
      #imageZoom::after {
        display: var(--display);
        content: "";
        width: 100%;
        height: 100%;
        background-color: black;
        background-image: var(--url);
        background-size: 200%;
        background-position: var(--zoom-x) var(--zoom-y);
        position: absolute;
        left: 0;
        top: 0;
        pointer-events: none;
      }
    </style>
  </head>

  <body class="bg-gray-300">
    <%- include("../partials/nav") %>
    <div class="mt-16"></div>

    <!-- Breadcrumb -->
    <nav class="bg-gray-300 pt-4 max-w-7xl mx-auto px-4">
      <ol class="flex items-center space-x-2 text-sm font-medium text-gray-500">
        <li><a href="/home" class="text-gray-800 hover:text-gray-900">Home</a></li>
        <li><span class="text-gray-400">/</span></li>
        <li><a href="/shop" class="text-gray-800 hover:text-gray-900">Shop</a></li>
        <li><span class="text-gray-400">/</span></li>
        <li class="text-gray-500"><%= product.brand %> <%= product.productName %></li>
      </ol>
    </nav>

    <!-- Product Details -->
    <div class="max-w-7xl mx-auto py-12 px-4">
      <div class="flex flex-wrap md:flex-nowrap">
        <div class="flex flex-col md:flex-row space-x-4">
          <!-- Thumbnails -->
          <div class="w-1/5 md:w-1/6 space-y-4">
            <% product.imageUrl.forEach((image, index) => { %>
              <img 
                src="<%= image %>" 
                alt="<%= product.productName %> Thumbnail <%= index + 1 %>"
                class="w-full h-auto rounded-md shadow-md cursor-pointer border-2 border-transparent hover:border-gray-400"
                onclick="updateMainImage('<%= image %>')"
              />
            <% }) %>
          </div>

          <!-- Main Image -->
          <div class="w-4/5">
            <div id="imageZoom" style="--url: url(<%= product.imageUrl[0] %>); --zoom-x: 0%; --zoom-y: 0%; --display: none;">
              <img 
                id="main-product-image"
                src="<%= product.imageUrl[0] %>"
                alt="<%= product.productName %> Main Image"
                class="w-full h-auto rounded-md shadow-md"
              />
            </div>
          </div>

          <!-- Product Info -->
          <div class="w-full md:w-2/3 md:pl-12">
            <h1 class="text-2xl font-bold text-gray-800">
              <%= product.brand %> <%= product.productName %>
            </h1>

            <!-- Pricing -->
            <div class="flex items-center space-x-4 my-4">
              <p class="text-lg font-bold text-gray-800"></p>
              <div class="space-y-2">
                <div class="flex items-baseline gap-4">
                  <% if (product.discountPrice < product.originalPrice) { %>
                    <span class="text-3xl font-bold text-gray-900">₹<%= product.discountPrice %></span>
                    <span class="text-xl text-gray-500 line-through">₹<%= product.originalPrice %></span>
                    <span class="text-green-600 font-medium">
                      -<%= Math.round((product.originalPrice - product.discountPrice) / product.originalPrice * 100) %>%
                    </span>
                  <% } else { %>
                    <span class="text-3xl font-bold text-gray-900">₹<%= product.originalPrice %></span>
                  <% } %>
                </div>
              </div>
            </div>

            <!-- Rating -->
            <div class="text-yellow-500 flex items-center">
              <i class="fa fa-star"></i>
              <p class="ml-2 text-gray-800 font-medium"><%= product.rating || 'No rating' %></p>
            </div>

            <!-- Stock Status -->
            <div class="mt-2">
              <% if (product.stock === 0) { %>
                <div class="font-bold text-red-600 bg-red-100 border border-red-600 rounded-lg p-2 w-fit">
                  Out of Stock
                </div>
              <% } else { %>
                <div class="text-green-500">
                  <p class="font-semibold">In stock (<%= product.stock %> left)</p>
                </div>
              <% } %>
            </div>

            <!-- Product Details -->
            <div class="mt-6">
              <h2 class="text-lg font-bold text-gray-800">Product Details</h2>
              <ul class="text-gray-600 mt-4 space-y-2">
                <li>Brand: <span class="font-semibold text-gray-800"><%= product.brand.toUpperCase() %></span></li>
                <li>Gender: <span class="font-semibold text-gray-800"><%= product.gender.toUpperCase() %></span></li>
              </ul>
            </div>

            <!-- Add to Cart Button -->
            <div class="flex gap-4 mt-6">
              <% if (product.stock > 0) { %>
                <!-- Add to Cart Button -->
                <button 
                  onclick="addToCart('<%= product._id %>')"
                  class="flex-1 px-6 py-3 bg-black text-white rounded-lg font-bold shadow-md hover:bg-gray-800 transition-colors flex items-center justify-center gap-2"
                >
                  <i class="fas fa-shopping-cart"></i>
                  Add To Cart
                </button>

                
              <% } else { %>
                <div class="font-bold text-red-600 bg-red-100 border border-red-600 rounded-lg p-3 w-full text-center">
                  Out of Stock
                </div>
              <% } %>
              <!-- Add to Wishlist Button -->
              <button 
              onclick="toggleWishlist('<%= product._id %>')"
              id="wishlist-btn-<%= product._id %>"
              class="px-6 py-3 bg-white text-gray-800 rounded-lg font-bold shadow-md hover:bg-gray-50 border border-gray-200 flex items-center justify-center gap-2 min-w-[140px]"
            >
              <i class="far fa-heart text-xl"></i>
            </button>
            </div>
          </div>
        </div>
      </div>
    </div>

    <!-- Related Products -->
    <div class="max-w-7xl mx-auto px-4 mb-12">
      <h3 class="text-2xl font-bold text-gray-900 mb-6">Related Products</h3>
      <div class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-5 gap-8">
        <% relatedProducts.slice(0, 5).forEach(product => { %>
          <div class="bg-white rounded-lg shadow-md p-4">
            <a href="/product/<%= product._id %>">
              <img 
                class="w-full h-auto rounded-lg mb-4"
                src="<%= product.imageUrl[0] %>"
                alt="<%= product.productName %>"
              />
              <h3 class="text-lg font-semibold text-gray-800">
                <span class="font-bold"><%= product.brand %></span>
                <%= product.productName %>
              </h3>
              <p class="text-gray-800 font-medium"><%= product.color %></p>
              <div class="text-yellow-500 flex items-center">
                <i class="fa fa-star"></i>
                <p class="ml-1 text-gray-800 font-medium"><%= product.rating || 'No rating' %></p>
              </div>
              <div class="flex gap-2 mt-2">
                <div class="text-xl font-bold text-gray-900">₹</div>
                <div class="text-gray-500 line-through mt-1">₹<%= product.price.toLocaleString() %></div>
              </div>
            </a>
            <div class="flex justify-between items-center mt-4">
              <button 
                onclick="addToWishlist('<%= product._id %>')" 
                class="hover:text-slate-500"
                id="related-wishlist-<%= product._id %>"
              >
                <i class="far fa-heart"></i>
              </button>
              <% if (product.stock === 0) { %>
                <div class="text-red-600 bg-red-100 border border-red-600 rounded-lg p-2 text-sm font-semibold">
                  Out of Stock
                </div>
              <% } %>
            </div>
          </div>
        <% }) %>
      </div>
    </div>

    <%- include("../partials/footer") %>

    <script>
      // Image zoom functionality
      const imageZoom = document.getElementById('imageZoom');

      imageZoom.addEventListener('mousemove', (event) => {
        imageZoom.style.setProperty('--display', 'block');
        const pointer = {
          x: (event.offsetX * 100) / imageZoom.offsetWidth,
          y: (event.offsetY * 100) / imageZoom.offsetHeight,
        };
        imageZoom.style.setProperty('--zoom-x', pointer.x + '%');
        imageZoom.style.setProperty('--zoom-y', pointer.y + '%');
      });

      imageZoom.addEventListener('mouseout', () => {
        imageZoom.style.setProperty('--display', 'none');
      });

      // Update main image
      function updateMainImage(imageUrl) {
        document.getElementById('main-product-image').src = imageUrl;
        imageZoom.style.setProperty('--url', `url(${imageUrl})`);
      }

      // Add to cart functionality
      async function addToCart(productId) {
        try {
          const response = await fetch('/cart/add', {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json'
            },
            body: JSON.stringify({
              productId,
              quantity: 1
            })
          });

          const data = await response.json();

          if (response.ok) {
            Swal.fire({
              icon: 'success',
              title: 'Added to Cart',
              text: data.message,
              toast: true,
              position: 'top-end',
              showConfirmButton: true,
              timer: 2000
            });

            // Update cart count in navbar if you have one
            const cartCountElement = document.querySelector('.cart-count');
            if (cartCountElement) {
              cartCountElement.textContent = data.cartCount;
            }
          } else {
            // If the error is about quantity limit, offer to go to cart
            if (data.message.includes('Maximum limit')) {
              Swal.fire({
                icon: 'warning',
                title: 'Quantity Limit Reached',
                text: data.message,
                showCancelButton: true,
                confirmButtonText: 'Go to Cart',
                cancelButtonText: 'Continue Shopping'
              }).then((result) => {
                if (result.isConfirmed) {
                  window.location.href = '/cart';
                }
              });
            } else {
              throw new Error(data.message);
            }
          }
        } catch (error) {
          Swal.fire({
            icon: 'error',
            title: 'Error',
            text: error.message || 'Failed to add to cart',
            toast: true,
            position: 'top-end',
            showConfirmButton: true,
            timer: 3000
          });
        }
      }

      // Add to wishlist functionality
      async function addToWishlist(productId) {
        try {
          const response = await fetch('/wishlist/add', {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify({ productId })
          });

          if (response.ok) {
            Swal.fire({
              icon: 'success',
              title: 'Added to Wishlist',
              timer: 1500,
              showConfirmButton: true
            });
          } else {
            const data = await response.json();
            throw new Error(data.message);
          }
        } catch (error) {
          Swal.fire({
            icon: 'error',
            title: 'Error',
            text: error.message || 'Failed to add to wishlist'
          });
        }
      }

      async function toggleWishlist(productId) {
        try {
            const wishlistBtn = document.querySelector(`#wishlist-btn-${productId} i`);
            const isInWishlist = wishlistBtn.classList.contains('fas');

            if (isInWishlist) {
                // Remove from wishlist
                const response = await fetch(`/wishlist/remove/${productId}`, {
                    method: 'DELETE'
                });
                const data = await response.json();

                if (data.success) {
                    wishlistBtn.classList.replace('fas', 'far');
                    wishlistBtn.classList.remove('text-red-500');
                    
                    Swal.fire({
                        icon: 'success',
                        title: 'Removed from wishlist',
                        toast: true,
                        position: 'top-end',
                        showConfirmButton: false,
                        timer: 2000
                    });
                }
            } else {
                // Add to wishlist
                const response = await fetch('/wishlist/add', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({ productId })
                });
                const data = await response.json();

                if (data.success) {
                    wishlistBtn.classList.replace('far', 'fas');
                    wishlistBtn.classList.add('text-red-500');
                    
                    Swal.fire({
                        icon: 'success',
                        title: 'Added to wishlist',
                        toast: true,
                        position: 'top-end',
                        showConfirmButton: false,
                        timer: 2000
                    });
                }
            }
        } catch (error) {
            console.error('Wishlist toggle error:', error);
            Swal.fire({
                icon: 'error',
                title: 'Error',
                text: error.message || 'Error updating wishlist',
                toast: true,
                position: 'top-end',
                showConfirmButton: false,
                timer: 3000
            });
        }
      }

      // Check initial wishlist status when page loads
      document.addEventListener('DOMContentLoaded', async () => {
        try {
            const response = await fetch(`/wishlist/check/<%= product._id %>`);
            const data = await response.json();

            if (data.success && data.isInWishlist) {
                const wishlistBtn = document.querySelector(`#wishlist-btn-<%= product._id %> i`);
                wishlistBtn.classList.replace('far', 'fas');
                wishlistBtn.classList.add('text-red-500');
            }
        } catch (error) {
            console.error('Error checking wishlist status:', error);
        }
      });
    </script>
  </body>
</html>
